DROP TABLE IF EXISTS PUBLIC.LIKES_TO_FILM;
DROP TABLE IF EXISTS PUBLIC.FRIENDS;
DROP TABLE IF EXISTS PUBLIC.FILMS_GENRE;
DROP TABLE IF EXISTS PUBLIC.GENRE;
DROP TABLE IF EXISTS PUBLIC.FILMS;
DROP TABLE IF EXISTS PUBLIC.MPA_RATING;
DROP TABLE IF EXISTS PUBLIC.USERS;



CREATE TABLE IF NOT EXISTS PUBLIC.MPA_RATING (
	MPA_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
	MPA_NAME CHARACTER VARYING(50),
	CONSTRAINT MPA_RATING_PK PRIMARY KEY (MPA_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	FILM_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
	FILM_NAME CHARACTER VARYING(50) NOT NULL,
	FILM_DESCRIPTION CHARACTER VARYING(200) NOT NULL,
	FILM_DURATION INTEGER NOT NULL,
	RELEASE_DATE DATE NOT NULL,
	MPA_ID INTEGER,
	CONSTRAINT FILMS_MPA_RATING_FK FOREIGN KEY (MPA_ID) REFERENCES PUBLIC.MPA_RATING(MPA_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_PK PRIMARY KEY (FILM_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	GENRE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
	GENRE_NAME CHARACTER VARYING(50),
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS_GENRE (
	GENRE_ID INTEGER NOT NULL,
	FILM_ID INTEGER NOT NULL,
	CONSTRAINT FILMS_GENRE_FK_2 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_GENRE_FK_3 FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	USER_ID INTEGER GENERATED BY DEFAULT AS IDENTITY,
	USER_NAME VARCHAR_IGNORECASE(50),
	USER_LOGIN VARCHAR_IGNORECASE(15) NOT NULL,
	USER_EMAIL VARCHAR_IGNORECASE(50) NOT NULL,
	USER_BIRTHDAY DATE NOT NULL,
	CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FRIENDS (
	USER_ID INTEGER NOT NULL,
	FRIENDS_ID INTEGER NOT NULL,
	FRIENDS_STATUS VARCHAR_IGNORECASE,
	CONSTRAINT FRIENDS_FK_1 FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FRIENDS_FK_2 FOREIGN KEY (FRIENDS_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS PUBLIC.LIKES_TO_FILM (
	USER_ID INTEGER,
	FILM_ID INTEGER,
	CONSTRAINT LIKES_TO_FILM_FK_FILM FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(FILM_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT LIKES_TO_FILM_FK_USER FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(USER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);
